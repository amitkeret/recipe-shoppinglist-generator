
doctype html
html
  head
    meta(charset="utf-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    link(rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css")
    link(rel="stylesheet" href="https://use.fontawesome.com/releases/v5.14.0/css/solid.css")
    link(rel="stylesheet" href="https://use.fontawesome.com/releases/v5.14.0/css/regular.css")
    link(rel="stylesheet" href="https://use.fontawesome.com/releases/v5.14.0/css/fontawesome.css")
    link(rel="stylesheet" href="./recipes.css")
    title Shopping list generator
  body

    template#section-title
      h4.section-title(@click.stop="$emit('sectionclick')")
        span.badge.badge-dark.mr-2
          span(v-if="text") {{ text }}
          i(v-if="icon" :class="getClass")
        | {{ title }}

    template#button-icon
      .button-icon.btn(
        :is="compTag"
        type="button"
        :class="compColor"
        @click="doCallback()"
      )
        i(v-if="icon" :class="compIcon")
        span(v-if="text" :class="children > 1 ? 'ml-2' : ''") {{ text }}

    template#recipe-item
      tr.recipe-item(
        v-show="showItem"
        :data-index="index"
        :class="{ 'table-active': recipe.selected }"
        @click="toggleSelectedRecipe"
      )
        td.recipe-actions: div
          i.fas.fa-trash.text-danger(@click.stop="deleteRecipe(index)")
          i.fas.fa-pen.text-warning(@click.stop="$emit('update')")
        td.recipe-title
          i.fa-lg.mr-2(
            :class="recipe.selected ? 'fas fa-check-square text-primary' : 'far fa-square'"
            @click.stop="toggleSelectedRecipe"
          )
          a.recipe-link(
            target="_blank"
            :href="recipe.link.length > 0 ? recipe.link : false"
          )
            | {{ recipe.recipeName }}
            i.ml-2.fas.fa-external-link-alt(v-show="recipe.link.length > 0")
        td.recipe-comment: i(v-if="recipe.comment.length > 0") {{ recipe.comment }}
        td.recipe-meta: div
          .badge.badge-primary(v-if="ingSearch") {{ ingSearch }}
          i.fas(:class="isVeg ? 'fa-leaf text-success' : 'fa-drumstick-bite text-danger'")

    #app

      .container.py-3

        .row.justify-content-center
          h3.mb-4 Shopping list generator

        #step1.card.shadow.mb-4
          .card-header: .row
            .col-md-4:
              section-title(text="1" title="Add recipes" @sectionclick="step1toggle")
              i.fas.fa-caret-down.text-light.ml-1
            .col-md-6.offset-md-2.text-right
              .dropdown#recipes-backup
                button-icon.dropdown-toggle(icon="save" text="Recipes backup" data-toggle="dropdown")
                .dropdown-menu
                  // https://codepen.io/pieceofcode/pen/zldng
                  label.dropdown-item.file-upload__label(for="recipesFile" text="Load") Load
                  input#recipesFile.file-upload__input(type="file" name="files" @change="handleFileSelect")
                  button-icon.dropdown-item(text="Save" color="light" :cb="exportRecipes")

          .card-body(v-show="step1visible == true"): .row
            .col
              
              //- Recipe metadata
              .row.form-group: .col
                input(type="hidden" v-model="editindex")
                input.form-control.form-control-lg(v-model="recipe.recipeName" placeholder="Recipe name")
                .input-group
                  input.form-control(v-model="recipe.link" placeholder="Link (optional)")
                  input.form-control(v-model="recipe.comment" placeholder="Comment (optional)")
              
              //- Recipe ingredients
              h5 Ingredients
              .row

                //- Ingredient list
                .col-md-4
                  p(v-show="recipe.ingredients.length == 0") No ingredients yet...
                  ul#new-ingredients.fa-ul(v-show="recipe.ingredients.length > 0")
                    li(v-for="(ing, index) in recipe.ingredients")
                      span.fa-li.text-danger: i.fas.fa-trash(@click="deleteIngredient(index)")
                      | {{ ing.amount }}{{ ing.unit }} {{ ing.name }}

                //- New ingredient form
                .col
                  .row.form-group

                    //- Ingredient selection
                    .col
                      select.form-control(v-model="ingredient.name" v-if="ingForm == 'exist'" @change="updateIngredientTexts")
                        option(value="" data-department="") Choose existing ingredient...
                        optgroup(v-for="(ingredients, department) in ingredientList" :label="department")
                          option(v-for="(ingredient, name) in ingredients" :value="name" :data-department="department") {{ name }}
                      div(v-if="ingForm == 'new'")
                        input.form-control(type="text" v-model="ingredient.name" @keydown.enter="addIngredient" placeholder="Ingredient name")
                        .row
                          .col
                            select.form-control(v-model="ingredient.department")
                              option(value="") Select department...
                              option(v-for="department in departmentList" :value="department") {{ department }}
                          .col
                            input.form-control(type="text" v-model="ingredient.department" @keydown.enter="addIngredient" placeholder="... or add new")

                    //- Existing / new
                    .col-md-3.text-right
                      .dropdown
                        button-icon.dropdown-toggle(data-toggle="dropdown" :text="ingForm == 'exist' ? 'Existing' : 'New'")
                        .dropdown-menu
                          input(type="hidden" v-model="ingForm" @change="clearIngredientName")
                          .dropdown-item(@click="ingForm = 'exist'") Existing
                          .dropdown-item(@click="ingForm = 'new'") New

                  .row

                    //- Amount & unit
                    .col-md-4
                      .input-group
                        input.form-control(type="number" v-model="ingredient.amount")
                        .input-group-append.dropdown
                          button.btn.dropdown-toggle(data-toggle="dropdown") {{ ingredient.unit }}
                          .dropdown-menu
                            input(type="hidden" v-model="ingredient.unit")
                            .dropdown-item(v-for="(option) in units" @click="ingredient.unit = option") {{ option }}

                    //- New ingedient action button
                    .col-md-2: button-icon(icon="plus" text="Add" color="primary" :cb="addIngredient")

            //- Recipe action buttons
            .col-md-2.text-right
              button-icon.btn-lg.mb-2(
                :icon="editindex !== '' ? 'pen' : 'plus'"
                :text="editindex !== '' ? 'Update' : 'Add'"
                :color="editindex !== '' ? 'warning' : 'primary'"
                :cb="addRecipe"
              )
              button-icon(icon="times" text="Cancel" color="danger" :cb="clearRecipe")

        #step2.card.shadow.mb-4

          .card-header.pb-1: .row
            .col-md-4: section-title(text="2" title="Select recipes")

            .col-md-6.offset-md-2: div.card-header-actions.d-flex
              //- Select none
              button-icon(icon="clone" family="far" color="outline-dark" title="Select none" :cb="selectNone")
              //- Recipe filter
              .input-group
                .input-group-prepend: .input-group-text: i.fas.fa-filter
                input.form-control(v-model="query" name="query" placeholder="Search recipe details & ingredients")
                .input-group-append: button-icon(icon="times" color="danger" title="Clear search" :cb="clearQuery")
              //- Veg filter
              button-icon(
                icon="leaf"
                :color="vegfilter ? 'success' : 'outline-dark'"
                title="Toggle vegetarian"
                :cb="toggleVeg"
              )

          //- Recipes list
          .card-body.py-2
            .table-responsive: table.table.table-hover.mb-0: tbody
              //- For custom components rendered as <tr>, syntax is different
              //- @see https://vuejs.org/guide/essentials/component-basics.html#dom-template-parsing-caveats
              tr(is="recipe-item" v-for="(recipe, index) in recipes"
                :recipe="recipe"
                :recipes="recipes"
                :index="index"
                :query="query"
                :vegfilter="vegfilter"
                @update="updateRecipe(index, recipe)"
              )

        #step3.card.shadow
          .card-header: .row.justify-content-between
            .col-md-4: section-title(text="3" title="Create shopping list")
            .col.text-right(v-if="selectedRecipes.length > 0")
              button-icon(
                icon="shopping-basket" text="Generate shopping list" color="primary"
                v-clipboard:copy="clipboardShoppingList"
                v-clipboard:success="onCopy"
                v-clipboard:error="onError"
              )
              button-icon(
                icon="clipboard-list" text="Preview selected recipes" color="primary"
                v-clipboard:copy="clipboardMenues"
                v-clipboard:success="onCopy"
                v-clipboard:error="onError"
              )

    script(src="https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js")
    script(src="https://cdn.jsdelivr.net/gh/zenorocha/clipboard.js@2.0.0/dist/clipboard.min.js")
    script(src="https://cdn.jsdelivr.net/gh/inndy/vue-clipboard2/dist/vue-clipboard.min.js")
    script(src="https://cdn.jsdelivr.net/gh/florian/xStore/src/xStore.min.js")
    script(src="https://cdn.jsdelivr.net/gh/graciano/mess/src/mess.min.js")
    script(src="https://cdn.jsdelivr.net/npm/jquery")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.bundle.min.js")
    script(src="https://rawgit.com/saribe/eModal/master/dist/eModal.min.js")
    script(src="./recipes.js")
